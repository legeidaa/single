{"version":3,"sources":["logo.svg","components/Nav/Nav.jsx","redux/todo-reducer.js","components/ToDoPage/Todo.jsx","components/Portfolio/Portfolio.jsx","redux/pomodoro-reducer.js","redux/store.js","components/ToDoPage/TodoContainer.jsx","components/PomodoroPage/PomodoroContainer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Nav","className","to","initialState","toDoColumn","name","key","id","nanoid","listItems","num","value","inProgressColumn","doneColumn","inputValue","CHANGE_INPUT_VALUE","ADD_TO_LIST","REMOVE_FROM_LIST","SWAP_LIST_ITEMS","ToDoList","props","column","droppableId","provided","snapshot","droppableProps","ref","innerRef","removeFromList","placeholder","ListItems","map","item","index","draggableId","String","draggableProps","dragHandleProps","onClick","Todo","onDragEnd","result","console","log","destination","source","swapListItems","onChange","onInputChange","addToList","Portfolio","link","siteName","description","PortfolioItem","target","href","reducers","combineReducers","toDoPage","state","action","type","newItem","length","columnName","newList","forEach","array","splice","payload","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","list","stateList","listItem","listStart","listEnd","pomodoroPage","store","createStore","window","TodoContainer","e","changeValue","this","React","Component","subscribe","info","getState","connect","dispatch","sort","PomodoroContainer","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,2BCuBAA,EAnBH,WACX,OACC,sBAAKC,UAAW,SAAhB,UACC,8BACC,cAAC,IAAD,CAASC,GAAG,GAAZ,yBAED,8BACC,cAAC,IAAD,CAASA,GAAG,QAAZ,oBAED,8BACC,cAAC,IAAD,CAASA,GAAG,kBAAZ,4B,mCCZAC,EAAe,CAClBC,WAAY,CACXC,KAAM,OACNC,IAAK,aACLC,GAAIC,cACJC,UAAW,CACV,CAACC,IAAK,EAAGH,GAAI,OAAQI,MAAO,cAC5B,CAACD,IAAK,EAAGH,GAAI,QAASI,MAAO,eAC7B,CAACD,IAAK,EAAGH,GAAI,QAASI,MAAO,gBAG/BC,iBAAkB,CACjBP,KAAM,cACNC,IAAK,mBACLC,GAAIC,cACJC,UAAW,CACV,CAACC,IAAK,EAAGH,GAAI,OAAQI,MAAO,qBAC5B,CAACD,IAAK,EAAGH,GAAI,OAAQI,MAAO,sBAC5B,CAACD,IAAK,EAAGH,GAAI,OAAQI,MAAO,uBAG9BE,WAAY,CACXR,KAAM,OACNC,IAAK,aACLC,GAAIC,cACJC,UAAW,CACV,CAACC,IAAK,EAAGH,GAAI,MAAOI,MAAO,cAC3B,CAACD,IAAK,EAAGH,GAAI,MAAOI,MAAO,eAC3B,CAACD,IAAK,EAAGH,GAAI,OAAQI,MAAO,gBAgC9BG,WAAY,IAIPC,EAAqB,qBACrBC,EAAc,cACdC,EAAmB,mBACnBC,EAAkB,kB,QCnCXC,EAAW,SAACC,GAExB,OACC,gCACC,6BAAKA,EAAMC,OAAOhB,OAClB,6BACC,cAAC,IAAD,CAAWiB,YAAaF,EAAMC,OAAOd,GAArC,SAEE,SAACgB,EAAUC,GAAX,OACC,gDAASD,EAASE,gBAAlB,IAAkCC,IAAKH,EAASI,SAAU1B,UAAU,kBAApE,UACC,cAAC,EAAD,CAAWoB,OAAQD,EAAMC,OAAQO,eAAgBR,EAAMQ,iBACtDL,EAASM,yBAULC,EAAY,SAACV,GACzB,OAECA,EAAMC,OAAOZ,UAAUsB,KAAI,SAACC,EAAMC,GACjC,OACC,cAAC,IAAD,CACKC,YAAaC,OAAOH,EAAKzB,IACzB0B,MAAOA,EAFZ,SAIE,SAAAV,GAAQ,OACR,yDAAKG,IAAKH,EAASI,UAAcJ,EAASa,gBAAoBb,EAASc,iBAAvE,aACC,qBAAI9B,GAAIyB,EAAKzB,GAAb,UACC,+BAAO0B,EAAQ,EAAI,QAClBD,EAAKrB,MACN,wBAAQ2B,QAAS,WAAQlB,EAAMQ,eAAeI,EAAKzB,GAAIa,EAAMC,SAA7D,uBATYW,EAAKzB,QAqBVgC,EA3EF,SAACnB,GAWb,OACC,sBAAKnB,UAAW,OAAhB,UAEC,qBAAKA,UAAW,aAAhB,SACC,eAAC,IAAD,CAAiBuC,UAbJ,SAACC,GAChBC,QAAQC,IAAIF,GACZ,IAAOG,EAAoCH,EAApCG,YAAaC,EAAuBJ,EAAvBI,OAAQX,EAAeO,EAAfP,YACvBU,GAILxB,EAAM0B,cAAcD,EAAOvB,YAAasB,EAAYtB,YAAauB,EAAOZ,MAAOW,EAAYX,MAAOC,IAMhG,UACC,cAAC,EAAD,CAAUb,OAAQD,EAAMhB,WAAYwB,eAAgBR,EAAMQ,iBAC1D,cAAC,EAAD,CAAUP,OAAQD,EAAMR,iBAAkBgB,eAAgBR,EAAMQ,iBAChE,cAAC,EAAD,CAAUP,OAAQD,EAAMP,WAAYe,eAAgBR,EAAMQ,sBAG5D,4CACA,0BAAUmB,SAAU3B,EAAM4B,cAAerC,MAAOS,EAAMN,WAAYe,YAAY,QAC9E,wBAAQS,QAASlB,EAAM6B,UAAvB,qBC3BUC,EAAY,WACxB,OACC,uBAAMjD,UAAW,YAAjB,UACC,6CACA,sBAAKA,UAAW,kBAAhB,UACC,sBAAKA,UAAU,yBAAf,UACC,cAAC,EAAD,CAAekD,KAAM,4BAA6BC,SAAU,uBAAwBC,YAAa,sBACjG,cAAC,EAAD,CAAeF,KAAM,wBAAyBC,SAAU,YAAaC,YAAa,kBAClF,cAAC,EAAD,CAAeF,KAAM,2BAA4BC,SAAU,eAAgBC,YAAa,sBACxF,cAAC,EAAD,CAAeF,KAAM,gCAAiCC,SAAU,mBAAoBC,YAAa,sBACjG,cAAC,EAAD,CAAeF,KAAM,iCAAkCC,SAAU,iBAAkBC,YAAa,yBAEjG,sBAAKpD,UAAU,yBAAf,UACC,cAAC,EAAD,CAAekD,KAAM,yBAA0BC,SAAU,cAAeC,YAAa,iBACrF,cAAC,EAAD,CAAeF,KAAM,uCAAwCC,SAAU,6BAA8BC,YAAa,sBAClH,cAAC,EAAD,CAAeF,KAAM,0BAA2BC,SAAU,iCAASC,YAAa,sBAChF,cAAC,EAAD,CAAeF,KAAM,gCAAiCC,SAAU,qBAAsBC,YAAa,gCAQlGC,EAAgB,SAAClC,GACtB,OACC,qBAAKnB,UAAW,kBAAhB,SACC,oBAAGsD,OAAO,SAASC,KAAMpC,EAAM+B,KAA/B,UACC,8BAAM/B,EAAMgC,SAAS,KACrB,8BAAIhC,EAAMgC,SAAS,+BAAOhC,EAAM+B,gB,8CC7BhChD,EAAe,GAIbY,EAAqB,qBCFrB0C,EAAWC,YAAgB,CAChCC,SJoF0B,WAAmC,IAAlCC,EAAiC,uDAAzBzD,EAAc0D,EAAW,uCAC5D,OAAQA,EAAOC,MACd,KAAK/C,EACJ,OAAO,2BACH6C,GADJ,IAEC9C,WAAY+C,EAAO/C,aAGrB,KAAKE,EACJ,IAAIT,EAAKC,cACLuD,EAAU,CAACrD,IAAKkD,EAAMxD,WAAWK,UAAUuD,OAAS,EAAGzD,GAAIA,EAAII,MAAOiD,EAAM9C,YAEhF,OAAI8C,EAAM9C,WACF,2BACH8C,GADJ,IAECxD,WAAW,2BACPwD,EAAMxD,YADA,IAETK,UAAU,GAAD,mBAAMmD,EAAMxD,WAAWK,WAAvB,CAAkCsD,MAE5CjD,WAAY,KAGP,eACH8C,GAGL,KAAK3C,EACJyB,QAAQC,IAAIkB,EAAOxC,QACnB,IAAI4C,EAAaJ,EAAOxC,OAAOf,IAC3B4D,EAAUL,EAAOxC,OAAOZ,UAU5B,OAPAyD,EAAQC,SAAQ,SAACnC,EAAMC,EAAOmC,GAC1BpC,EAAKzB,KAAOsD,EAAOtD,KACrB6D,EAAMC,OAAOpC,EAAO,GACpBS,QAAQC,IAAIyB,GACZ1B,QAAQC,IAAIuB,OAGP,YAAC,eACJN,GADJ,kBAEEK,EAFF,2BAGKL,EAAMK,IAHX,IAIExD,UAAU,YAAKyD,OAIlB,KAAKhD,EACJ,MAAgG2C,EAAOS,QAAhGC,EAAP,EAAOA,iBAAkBC,EAAzB,EAAyBA,eAAgBC,EAAzC,EAAyCA,oBAAqBC,EAA9D,EAA8DA,kBAA9D,EAAiFxC,YAGjF,GAAGqC,IAAqBC,EAAgB,CAAC,IAAD,EACnCG,EAAO,KACX,IAAK,IAAIrE,KAAOsD,EAAO,CACtB,IAAIgB,EAAYhB,EAAMtD,GAClBsE,EAAUrE,KAAOgE,IACpBI,EAAOC,GAGTlC,QAAQC,IAAIgC,GACZ,IAAME,EAAWF,EAAKlE,UAAU4D,OAAOI,EAAqB,IAE5D,EAAAE,EAAKlE,WAAU4D,OAAf,SAAsBK,EAAmB,GAAzC,mBAA+CG,KAGhD,GAAGN,IAAqBC,EAAgB,CAAC,IAAD,EACnCM,EAAY,KACZC,EAAU,KACd,IAAK,IAAIzE,KAAOsD,EAAO,CACtB,IAAIgB,EAAYhB,EAAMtD,GAClBsE,EAAUrE,KAAOgE,EACpBO,EAAYF,EACFA,EAAUrE,KAAOiE,IAC3BO,EAAUH,GAIZ,IAAMC,EAAWC,EAAUrE,UAAU4D,OAAOI,EAAqB,IACjE,EAAAM,EAAQtE,WAAU4D,OAAlB,SAAyBK,EAAmB,GAA5C,mBAAkDG,KAEnD,OAAO,eACHjB,GAGL,QACC,OAAOA,IIxKToB,aDM8B,WAAmC,IAAlCpB,EAAiC,uDAAzBzD,EAAc0D,EAAW,uCAChE,OAAQA,EAAOC,OACT/C,EACG,2BACH6C,GADJ,IAEC9C,WAAY+C,EAAO/C,aAKb8C,KCbJqB,EAAQC,YAAYzB,GAE1B0B,OAAOF,MAAQA,EACAA,QCLTG,E,4MACFpC,cAAgB,SAACqC,GACb,IAAIvE,EAAauE,EAAE9B,OAAO5C,MAC1B,EAAKS,MAAMkE,YAAYxE,I,4CAE3B,WACI,OACI,cAAC,EAAD,CACIA,WAAYyE,KAAKnE,MAAMN,WACvBwE,YAAaC,KAAKnE,MAAMkE,YACxBrC,UAAWsC,KAAKnE,MAAM6B,UACtBrB,eAAgB2D,KAAKnE,MAAMQ,eAC3BoB,cAAeuC,KAAKvC,cACpBvC,UAAW8E,KAAKnE,MAAMX,UACtBL,WAAYmF,KAAKnE,MAAMhB,WACvBQ,iBAAkB2E,KAAKnE,MAAMR,iBAC7BC,WAAY0E,KAAKnE,MAAMP,WACvBiC,cAAeyC,KAAKnE,MAAM0B,oB,GAjBd0C,IAAMC,WAsDlCR,EAAMS,WAAU,kBAAMhD,QAAQiD,KAAKV,EAAMW,eAE1BC,mBAhCO,SAACjC,GACnB,MAAO,CACH9C,WAAY8C,EAAMD,SAAS7C,WAC3BV,WAAYwD,EAAMD,SAASvD,WAC3BQ,iBAAkBgD,EAAMD,SAAS/C,iBACjCC,WAAY+C,EAAMD,SAAS9C,eAOV,SAACiF,GACtB,MAAO,CACHR,YAAa,SAAC3E,GAEVmF,ELyBiC,CAAChC,KAAM/C,EAAmBD,WKzBtCH,KAEzBsC,UAAW,WLwBM,IAACjB,EKvBd8D,ELuBwB,CAAChC,KAAM9C,EAAagB,UKrBhDJ,eAAgB,SAACrB,EAAIc,GAEjByE,ELoBkB,SAACvF,EAAIc,GAAL,MAAiB,CAACyC,KAAM7C,EAAkBV,KAAIc,UKpBvDO,CAAerB,EAAIc,KAEhCyB,cAAe,SAACyB,EAAiBC,EAAeC,EAAoBC,EAAmBxC,GACnF4D,ELkBQ,SAACvB,EAAiBC,EAAeC,EAAoBC,EAAmBxC,GAAxE,MACnB,CACC4B,KAAM5C,EACNoD,QAAS,CACRC,mBACAC,iBACAC,sBACAC,oBACAxC,gBK1BkB6D,CAAKxB,EAAiBC,EAAeC,EAAoBC,EAAmBxC,QAMlF2D,CAA6CT,GC7DtDY,E,4HAA0BR,IAAMC,WAGvBO,ICmCAC,MAxBf,SAAa7E,GAEZ,OACC,cAAC,IAAD,UACC,qBAAKnB,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOiG,KAAK,GAAGC,QAAS,cAAC,EAAD,MACxB,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,uBCjBJE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAU9B,MAAOA,EAAjB,SACC,cAAC,EAAD,QAGF+B,SAASC,eAAe,SAMzBb,M","file":"static/js/main.3339223c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Nav = () => {\r\n\treturn (\r\n\t\t<nav className={'navbar'}>\r\n\t\t\t<div>\r\n\t\t\t\t<NavLink to=''>Portfolio</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<NavLink to='/todo'>ToDo</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<NavLink to='/interval-timer'>Pomodoro</NavLink>\r\n\t\t\t</div>\r\n\t\t\t{/*<div>*/}\r\n\t\t\t{/*\t<NavLink to='/2048'>2048</NavLink>*/}\r\n\t\t\t{/*</div>*/}\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Nav;","import {nanoid} from \"nanoid\";\r\n\r\nlet initialState = {\r\n\ttoDoColumn: {\r\n\t\tname: 'ToDo',\r\n\t\tkey: 'toDoColumn',\r\n\t\tid: nanoid(),\r\n\t\tlistItems: [\r\n\t\t\t{num: 1, id: 112312, value: 'first task'},\r\n\t\t\t{num: 2, id: 2232342, value: 'second task'},\r\n\t\t\t{num: 3, id: 3324234, value: 'third task'},\r\n\t\t],\r\n\t},\r\n\tinProgressColumn: {\r\n\t\tname: 'In progress',\r\n\t\tkey: 'inProgressColumn',\r\n\t\tid: nanoid(),\r\n\t\tlistItems: [\r\n\t\t\t{num: 1, id: 165756, value: 'first in progress'},\r\n\t\t\t{num: 2, id: 265757, value: 'second in progress'},\r\n\t\t\t{num: 3, id: 356757, value: 'third in progress'},\r\n\t\t],\r\n\t},\r\n\tdoneColumn: {\r\n\t\tname: 'Done',\r\n\t\tkey: 'doneColumn',\r\n\t\tid: nanoid(),\r\n\t\tlistItems: [\r\n\t\t\t{num: 1, id: 19877, value: 'first done'},\r\n\t\t\t{num: 2, id: 27997, value: 'second done'},\r\n\t\t\t{num: 3, id: 397978, value: 'third done'},\r\n\t\t],\r\n\t},\r\n\t// lists: [\r\n\t// \t{\r\n\t// \t\tname: 'ToDo',\r\n\t// \t\tid: nanoid(),\r\n\t// \t\tlistItems: [\r\n\t// \t\t\t{num: 1, id: 112312, value: 'first task'},\r\n\t// \t\t\t{num: 2, id: 2232342, value: 'second task'},\r\n\t// \t\t\t{num: 3, id: 3324234, value: 'third task'},\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tname: 'In progress',\r\n\t// \t\tid: nanoid(),\r\n\t// \t\tlistItems: [\r\n\t// \t\t\t{num: 1, id: 165756, value: 'first in progress'},\r\n\t// \t\t\t{num: 2, id: 265757, value: 'second in progress'},\r\n\t// \t\t\t{num: 3, id: 356757, value: 'third in progress'},\r\n\t// \t\t],\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tname: 'Done',\r\n\t// \t\tid: nanoid(),\r\n\t// \t\tlistItems: [\r\n\t// \t\t\t{num: 1, id: 19877, value: 'first done'},\r\n\t// \t\t\t{num: 2, id: 27997, value: 'second done'},\r\n\t// \t\t\t{num: 3, id: 397978, value: 'third done'},\r\n\t// \t\t],\r\n\t// \t}\r\n\t// ],\r\n\tinputValue: '',\r\n}\r\n\r\n//actions\r\nconst CHANGE_INPUT_VALUE = 'CHANGE_INPUT_VALUE'\r\nconst ADD_TO_LIST = 'ADD_TO_LIST'\r\nconst REMOVE_FROM_LIST = 'REMOVE_FROM_LIST'\r\nconst SWAP_LIST_ITEMS = 'SWAP_LIST_ITEMS'\r\n\r\n//action creators. Вызов этой функции нужно передавать как аргумент в dispatch, а в actionCreator передавать необходимое значение (value)\r\nexport const changeValue = (inputValue) => ( {type: CHANGE_INPUT_VALUE,inputValue})\r\nexport const addToList = (item) => ({type: ADD_TO_LIST, item })\r\nexport const removeFromList = (id, column) => ({type: REMOVE_FROM_LIST, id, column })\r\nexport const sort = (droppableIdStart,droppableIdEnd,droppableIndexStart,droppableIndexEnd, draggableId) => (\r\n\t{\r\n\t\ttype: SWAP_LIST_ITEMS,\r\n\t\tpayload: {\r\n\t\t\tdroppableIdStart,\r\n\t\t\tdroppableIdEnd,\r\n\t\t\tdroppableIndexStart,\r\n\t\t\tdroppableIndexEnd,\r\n\t\t\tdraggableId,\r\n\t\t}\r\n\t}\r\n)\r\n\r\n//reducer — чистая функция которая будет отвечать за обновление состояния. Функция принимает значение текущего состояния и обьект события (action)\r\nexport const toDoReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_INPUT_VALUE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinputValue: action.inputValue\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ADD_TO_LIST: {\r\n\t\t\tlet id = nanoid()\r\n\t\t\tlet newItem = {num: state.toDoColumn.listItems.length + 1, id: id, value: state.inputValue}\r\n\r\n\t\t\tif (state.inputValue) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttoDoColumn: {\r\n\t\t\t\t\t\t...state.toDoColumn,\r\n\t\t\t\t\t\tlistItems: [...state.toDoColumn.listItems, newItem]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinputValue: '',\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase REMOVE_FROM_LIST: {\r\n\t\t\tconsole.log(action.column)\r\n\t\t\tlet columnName = action.column.key\r\n\t\t\tlet newList = action.column.listItems\r\n\r\n\r\n\t\t\tnewList.forEach((item, index, array) => {\r\n\t\t\t\tif(item.id === action.id) {\r\n\t\t\t\t\tarray.splice(index, 1)\r\n\t\t\t\t\tconsole.log(array)\r\n\t\t\t\t\tconsole.log(newList)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\t[columnName]: {\r\n\t\t\t\t\t...state[columnName],\r\n\t\t\t\t\tlistItems: [...newList]\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t}\r\n\t\tcase SWAP_LIST_ITEMS: {\r\n\t\t\tconst {droppableIdStart, droppableIdEnd, droppableIndexStart, droppableIndexEnd, draggableId} = action.payload\r\n\r\n\t\t\t//if same column\r\n\t\t\tif(droppableIdStart === droppableIdEnd) {\r\n\t\t\t\tlet list = null;\r\n\t\t\t\tfor (let key in state) {\r\n\t\t\t\t\tlet stateList = state[key];\r\n\t\t\t\t\tif (stateList.id === droppableIdStart) {\r\n\t\t\t\t\t\tlist = stateList\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(list)\r\n\t\t\t\tconst listItem = list.listItems.splice(droppableIndexStart, 1)\r\n\r\n\t\t\t\tlist.listItems.splice(droppableIndexEnd, 0, ...listItem)\r\n\t\t\t}\r\n\r\n\t\t\tif(droppableIdStart !== droppableIdEnd) {\r\n\t\t\t\tlet listStart = null\r\n\t\t\t\tlet listEnd = null\r\n\t\t\t\tfor (let key in state) {\r\n\t\t\t\t\tlet stateList = state[key];\r\n\t\t\t\t\tif (stateList.id === droppableIdStart) {\r\n\t\t\t\t\t\tlistStart = stateList\r\n\t\t\t\t\t} else if (stateList.id === droppableIdEnd) {\r\n\t\t\t\t\t\tlistEnd = stateList\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst listItem = listStart.listItems.splice(droppableIndexStart, 1)\r\n\t\t\t\tlistEnd.listItems.splice(droppableIndexEnd, 0, ...listItem)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n//Функция dispatch передаёт текущее состояние и передает действие через редьюсер, который мы определили при инициализации. Затем она перезаписывает старое состояние новым состоянием.\r\n//store.dispatch(action_1AC(\"Some value\"));\r\n","import React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport {removeFromList} from \"../../redux/todo-reducer\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\n\r\n\r\nconst Todo = (props) => {\r\n\r\n\tlet onDragEnd = (result) => {\r\n\t\tconsole.log(result)\r\n\t\tconst {destination, source, draggableId} = result\r\n\t\tif (!destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//droppableIdStart,droppableIdEnd,droppableIndexStart,droppableIndexEnd, draggableId\r\n\t\tprops.swapListItems(source.droppableId, destination.droppableId, source.index, destination.index, draggableId)\r\n\t}\r\n\treturn (\r\n\t\t<div className={'todo'}>\r\n\r\n\t\t\t<div className={'todo__wrap'}>\r\n\t\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t\t<ToDoList column={props.toDoColumn} removeFromList={props.removeFromList}/>\r\n\t\t\t\t\t<ToDoList column={props.inProgressColumn} removeFromList={props.removeFromList}/>\r\n\t\t\t\t\t<ToDoList column={props.doneColumn} removeFromList={props.removeFromList}/>\r\n\t\t\t\t</DragDropContext>\r\n\t\t\t</div>\r\n\t\t\t<h2>Add a task</h2>\r\n\t\t\t<textarea onChange={props.onInputChange} value={props.inputValue} placeholder=\"...\"/>\r\n\t\t\t<button onClick={props.addToList}>Add</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const ToDoList = (props) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>{props.column.name}</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<Droppable droppableId={props.column.id} >\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(provided, snapshot)=> (\r\n\t\t\t\t\t\t\t<div {...provided.droppableProps} ref={provided.innerRef} className=\"todo__list-item\">\r\n\t\t\t\t\t\t\t\t<ListItems column={props.column} removeFromList={props.removeFromList}/>\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</Droppable>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const ListItems = (props) => {\r\n\treturn (\r\n\r\n\t\tprops.column.listItems.map((item, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Draggable key={item.id}\r\n\t\t\t\t\t\t   draggableId={String(item.id)}\r\n\t\t\t\t\t\t   index={index}\r\n\t\t\t\t>\r\n\t\t\t\t\t{provided => (\r\n\t\t\t\t\t\t<div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n\t\t\t\t\t\t\t<li id={item.id} >\r\n\t\t\t\t\t\t\t\t<span>{index + 1 + '.  '}</span>\r\n\t\t\t\t\t\t\t\t{item.value}\r\n\t\t\t\t\t\t\t\t<button onClick={() => { props.removeFromList(item.id, props.column)}}>\r\n\t\t\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Draggable>\r\n\t\t\t)\r\n\t\t})\r\n\t)\r\n}\r\n\r\nexport default Todo","import React from \"react\";\r\n\r\nexport const Portfolio = () => {\r\n\treturn (\r\n\t\t<main className={\"portfolio\"}>\r\n\t\t\t<h1>My websites</h1>\r\n\t\t\t<div className={\"portfolio__wrap\"}>\r\n\t\t\t\t<div className=\"portfolio__wrap-column\">\r\n\t\t\t\t\t<PortfolioItem link={\"https://makemoneyprod.ru/\"} siteName={\"MakeMoney Production\"} description={\"Webstudio website\"}/>\r\n\t\t\t\t\t<PortfolioItem link={\"https://yolan-psy.ru/\"} siteName={\"Yolan-Psy\"} description={\"Personal blog\"}/>\r\n\t\t\t\t\t<PortfolioItem link={\"https://js-webstudio.ru/\"} siteName={\"Js-Webstudio\"} description={\"Webstudio website\"}/>\r\n\t\t\t\t\t<PortfolioItem link={\"https://pingan-financial.com/\"} siteName={\"Pingan-Financial\"} description={\"Webstudio website\"}/>\r\n\t\t\t\t\t<PortfolioItem link={\"https://matrixdefenceintl.com/\"} siteName={\"Matrix Defence\"} description={\"Webstudio website\"}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"portfolio__wrap-column\">\r\n\t\t\t\t\t<PortfolioItem link={\"https://almazantik.ru/\"} siteName={\"Almaz-Antik\"} description={\"Online store\"}/>\r\n\t\t\t\t\t<PortfolioItem link={\"https://petroliumoilallianceinc.com/\"} siteName={\"Petrolium Oil Alliance Inc\"} description={\"Webstudio website\"}/>\r\n\t\t\t\t\t<PortfolioItem link={\"https://xn--80aumgc.su/\"} siteName={\"Аркор\"} description={\"Webstudio website\"}/>\r\n\t\t\t\t\t<PortfolioItem link={\"https://makemoneybloggers.ru/\"} siteName={\"MakeMoney Bloggers\"} description={\"Webstudio website\"}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\r\n\t)\r\n}\r\n\r\nconst PortfolioItem = (props) => {\r\n\treturn (\r\n\t\t<div className={\"portfolio__item\"}>\r\n\t\t\t<a target=\"_blank\" href={props.link}>\r\n\t\t\t\t<div>{props.siteName[0]}</div>\r\n\t\t\t\t<p>{props.siteName}<span>{props.link}</span></p>\r\n\t\t\t</a>\r\n\t\t\t{/*<p>{props.description}</p>*/}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n","import {nanoid} from \"nanoid\";\r\n\r\nlet initialState = {\r\n}\r\n\r\n//actions\r\nconst CHANGE_INPUT_VALUE = 'CHANGE_INPUT_VALUE'\r\n\r\n//action creators. Вызов этой функции нужно передавать как аргумент в dispatch, а в actionCreator передавать необходимое значение (value)\r\nexport const changeValue = (inputValue) => ( {type: CHANGE_INPUT_VALUE,inputValue})\r\n\r\n//reducer — чистая функция которая будет отвечать за обновление состояния. Функция принимает значение текущего состояния и обьект события (action)\r\nexport const pomodoroReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_INPUT_VALUE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinputValue: action.inputValue\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n//Функция dispatch передаёт текущее состояние и передает действие через редьюсер, который мы определили при инициализации. Затем она перезаписывает старое состояние новым состоянием.\r\n//store.dispatch(action_1AC(\"Some value\"));\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {toDoReducer} from \"./todo-reducer\";\r\nimport {pomodoroReducer} from \"./pomodoro-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\ttoDoPage: toDoReducer,\r\n\tpomodoroPage: pomodoroReducer,\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nwindow.store = store\r\nexport default store","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport {addToList, changeValue, removeFromList, sort} from \"../../redux/todo-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport store from \"../../redux/store\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nclass TodoContainer extends React.Component{\r\n    onInputChange = (e) => {\r\n        let inputValue = e.target.value\r\n        this.props.changeValue(inputValue)\r\n    }\r\n    render() {\r\n        return (\r\n            <Todo\r\n                inputValue={this.props.inputValue}\r\n                changeValue={this.props.changeValue}\r\n                addToList={this.props.addToList}\r\n                removeFromList={this.props.removeFromList}\r\n                onInputChange={this.onInputChange}\r\n                listItems={this.props.listItems}\r\n                toDoColumn={this.props.toDoColumn}\r\n                inProgressColumn={this.props.inProgressColumn}\r\n                doneColumn={this.props.doneColumn}\r\n                swapListItems={this.props.swapListItems}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n//mapStateToProps преобразует стейт в пропсы\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        inputValue: state.toDoPage.inputValue,\r\n        toDoColumn: state.toDoPage.toDoColumn,\r\n        inProgressColumn: state.toDoPage.inProgressColumn,\r\n        doneColumn: state.toDoPage.doneColumn,\r\n    }\r\n}\r\n\r\n//mapDispatchToProps передаёт в компонент методы для обновления необходимого поля store\r\n//вызываем из компонента метод, определенный в mapDispatchToProps, этот метод вызывает диспатч, который передает экшн в редьсер, который меняет стейт.\r\n//Когда меняется стейт, перерисовывается компонент\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeValue: (value) => {\r\n            //диспатчим экшнкреэйторы\r\n            dispatch(changeValue(value))\r\n        },\r\n        addToList: () => {\r\n            dispatch(addToList())\r\n        },\r\n        removeFromList: (id, column) => {\r\n\r\n            dispatch(removeFromList(id, column))\r\n        },\r\n        swapListItems: (droppableIdStart,droppableIdEnd,droppableIndexStart,droppableIndexEnd, draggableId) => {\r\n            dispatch(sort(droppableIdStart,droppableIdEnd,droppableIndexStart,droppableIndexEnd, draggableId))\r\n        }\r\n    }\r\n}\r\nstore.subscribe(() => console.info(store.getState()))\r\n//возвращает КонтейнерКомпонент, в пропсах которого переданы все свойства и методы, указанные в mapDispatchToProps и mapStateToProps\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer);\r\n","import React from \"react\";\r\n\r\nclass PomodoroContainer extends React.Component{\r\n\r\n}\r\nexport default PomodoroContainer","import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport {\n\tBrowserRouter,\n\tRoutes,\n\tRoute, HashRouter\n} from \"react-router-dom\";\nimport Nav from './components/Nav/Nav';\nimport Todo from './components/ToDoPage/Todo'\nimport {Portfolio} from './components/Portfolio/Portfolio'\nimport TodoContainer from \"./components/ToDoPage/TodoContainer\";\nimport PomodoroContainer from \"./components/PomodoroPage/PomodoroContainer\";\n\n//сделать вложенность рутов\n\nfunction App(props) {\n\n\treturn (\n\t\t<HashRouter>\n\t\t\t<div className='container'>\n\t\t\t\t<div className=\"app\">\n\t\t\t\t\t<Nav />\n\t\t\t\t\t<div className='app__main'>\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route path='' element={<Portfolio />} />\n\t\t\t\t\t\t\t<Route path='/portfolio' element={<Portfolio />} />\n\t\t\t\t\t\t\t<Route path='/todo' element={<TodoContainer />} />\n\t\t\t\t\t\t\t<Route path='/pomodoro' element={<PomodoroContainer/>} />\n\t\t\t\t\t\t\t<Route path='/2048' />\n\t\t\t\t\t\t</Routes>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HashRouter>\n\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './sass/style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}